<!-- 
Application for evaluation of facial symmetry using Microsoft Kinect v2.
Copyright(C) 2017  Sedlák Vojtěch (Vojta.sedlak@gmail.com)

This file is part of FaceSymmetry. 

FaceSymmetry is free software: you can redistribute it and/or modify 
it under the terms of the GNU General Public License as published by 
the Free Software Foundation, either version 3 of the License, or 
(at your option) any later version. 

FaceSymmetry is distributed in the hope that it will be useful, 
but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
GNU General Public License for more details. 

You should have received a copy of the GNU General Public License 
along with Application for evaluation of facial symmetry using Microsoft Kinect v2.. If not, see <http://www.gnu.org/licenses/>.
 --> 

<UserControl x:Class="Evaluator.DataView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:local="clr-namespace:Evaluator"
             xmlns:common="clr-namespace:Common"
             mc:Ignorable="d" d:DesignHeight="700" d:DesignWidth="1500" Width="auto" Height="auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
             IsTabStop="False"
             >

    <UserControl.Resources>
        <common:MathConverter x:Key="MathConverter" />
    </UserControl.Resources>

    <Grid x:Name="viewerMainGrid" Background="White" Margin="0,10,0,0" >
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="100" />
        </Grid.RowDefinitions>




        <TabControl x:Name="tabControl" HorizontalAlignment="Stretch" Grid.Row="0" IsTabStop="False"
                    VerticalAlignment="Stretch" Margin="0,0,0,0"
                    BorderThickness="0" BorderBrush="{x:Null}"
                    Background="White"
                    DataContext="{Binding }" 
                    SelectedIndex="{Binding SelectedTab}">
            <TabItem Header="Raw Data" Background="{StaticResource MenuColor}" BorderBrush="{x:Null}" BorderThickness="0" IsTabStop="False" >
                <Grid x:Name="dataViewer" Grid.Row="1" Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="125*"/>
                        <ColumnDefinition Width="66*"/>
                        <ColumnDefinition Width="59*"/>
                    </Grid.ColumnDefinitions>

                    <Border x:Name="border3D"  Grid.Column="0" BorderBrush="{StaticResource MenuColor}" Background="White"
                            BorderThickness="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Focusable="True">
                        <StackPanel  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0" Focusable="True">
                            <Viewport3D x:Name="viewport3d" 
                                        VerticalAlignment="Stretch" 
                                        Height="{Binding ActualHeight, ElementName=border3D}"
                                        RenderOptions.EdgeMode="Aliased"
                                        ClipToBounds="False"
                                        Margin="0"
                                        IsHitTestVisible ="False"
                                        >
                                <Viewport3D.RenderTransform>
                                    <ScaleTransform ScaleX="1.0" ScaleY="1.0"/>
                                </Viewport3D.RenderTransform>

                                <Viewport3D.Camera>
                                    <PerspectiveCamera x:Name="camera" Position="0, 0, 5" LookDirection="0,0, -1"  UpDirection="0,1,0" FieldOfView="50" />
                                </Viewport3D.Camera>


                                <ModelVisual3D>
                                    <ModelVisual3D.Content>
                                        <DirectionalLight Color="#bfbfbf" Direction="0.5,-0.5,-0.5" />
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>
                                <ModelVisual3D>
                                    <ModelVisual3D.Content>
                                        <DirectionalLight Color="#bfbfbf" Direction="-0.5,-0.5,-0.5" />
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>

                                <ModelVisual3D>
                                    <ModelVisual3D.Content>
                                        <AmbientLight Color="#0d0d0d" />
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>

                                <ModelVisual3D x:Name="modelVisual3D">
                                    <ModelVisual3D.Content>
                                        <GeometryModel3D x:Name="GeometryModel">
                                            <GeometryModel3D.Geometry>
                                                <MeshGeometry3D x:Name="theGeometry"
                                   TriangleIndices="0,1,2 3,4,5 "
                                   Normals="0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1"
                                   TextureCoordinates="0,0 1,0 1,1 1,1 0,1 0,0"
                                   Positions="-0.25,-0.25,-1 0.25,-0.25,-1 0.25,0.25,-1 0.25,0.25,-1 -0.25,0.25,-1 -0.25,-0.25,-1" />
                                            </GeometryModel3D.Geometry>

                                            <GeometryModel3D.Material>
                                                <MaterialGroup>
                                                    <DiffuseMaterial x:Name="theMaterial">
                                                        <DiffuseMaterial.Brush>
                                                            <SolidColorBrush Color="#ffe0bd" />
                                                        </DiffuseMaterial.Brush>
                                                    </DiffuseMaterial>
                                                </MaterialGroup>
                                            </GeometryModel3D.Material>

                                            <GeometryModel3D.Transform>
                                                <RotateTransform3D>
                                                    <RotateTransform3D.Rotation>
                                                        <AxisAngleRotation3D x:Name="axisAngle" Axis="0,0,0" Angle="0" />
                                                    </RotateTransform3D.Rotation>
                                                </RotateTransform3D>
                                            </GeometryModel3D.Transform>
                                        </GeometryModel3D>
                                    </ModelVisual3D.Content>
                                </ModelVisual3D>
                            </Viewport3D>

                        </StackPanel>
                    </Border>

                    <Border  Grid.Column="1" BorderBrush="{StaticResource MenuColor}" BorderThickness="0,2,2,1"                           
                             Height="{Binding ActualHeight, ElementName=border3D, Converter={StaticResource MathConverter}, ConverterParameter=(@VALUE/2)}" 
                             
                             VerticalAlignment="Top"
                             >
                        <StackPanel  Width="auto" Height="auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                            <Canvas x:Name="canvasFront" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                        </StackPanel>
                    </Border>

                    <Border Grid.Column="1" BorderBrush="{StaticResource MenuColor}" BorderThickness="0,1,2,2" 
                            Height="{Binding ActualHeight, ElementName=border3D, Converter={StaticResource MathConverter}, ConverterParameter=(@VALUE/2)}"                            
                            VerticalAlignment="Bottom"
                             >
                        <StackPanel  Width="auto" Height="auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  >
                            <Canvas x:Name="canvasProfile" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        </StackPanel>
                    </Border>

                    <Border x:Name="patientBorder"  Grid.Column="2" CornerRadius="30,0,0,0" Margin="20,0,0,0" DockPanel.Dock="Left" Background="{StaticResource MenuColor}" >
                        <Grid >
                            <Label x:Name="label" Content="Exercises" HorizontalAlignment="Left" Margin="20,22,0,0" VerticalAlignment="Top" FontSize="20"/>
                            <ListBox x:Name="ActiveListBox" HorizontalAlignment="Left" 
                                     Height="auto" MinHeight="150" 
                                     MaxHeight="{Binding ActualHeight, ElementName=patientBorder, Converter={StaticResource MathConverter}, ConverterParameter=(@VALUE-100)}" 
                                     Width="auto"
                                     MinWidth="150"
                                     MaxWidth="{Binding ActualWidth, ElementName=patientBorder, Converter={StaticResource MathConverter}, ConverterParameter=(@VALUE-20)}" 
                                     Margin="20,64,0,0" VerticalAlignment="Top"
                                FontSize="16" ItemsSource="{Binding Path=ActiveExercises}" SelectedIndex="0" IsTabStop="False" Focusable="False" 
                                     KeyboardNavigation.IsTabStop="False"
                                     >
                            </ListBox>



                            <Button x:Name="buttonInsert" Style="{StaticResource ButtonStyleGreen}" Content="Insert" Width="100"  Margin="20,263,0,0" HorizontalAlignment="Left"
                                     Command="{Binding InsertExerciseCommand}" Height="31" VerticalAlignment="Top" IsTabStop="False" Focusable="False"  />
                            <Button x:Name="buttonRemove" Style="{StaticResource ButtonStyleRed}" Content="Remove" IsTabStop="False" Focusable="False"  Width="100"  Margin="20,311,0,0" HorizontalAlignment="Left"
                                    Command="{Binding RemoveExerciseCommand}" Height="31" VerticalAlignment="Top"
                                    />
                            <Button x:Name="buttonInsert_Copy" Style="{StaticResource ButtonStyleGreen}" Content="Save Changes" Width="125"  Margin="20,0,0,20" HorizontalAlignment="Left"
                                Command="{Binding SaveCommand}" IsTabStop="False" Focusable="False" Height="31" VerticalAlignment="Bottom"  />
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <TabItem Header="Interpolation" Background="{StaticResource MenuColor}" BorderBrush="{x:Null}" IsTabStop="False" >
                <Grid x:Name="dataViewerInterpol" Grid.Row="1" Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="6*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>


                    <Border x:Name="border3DInterpol"   Grid.Column="0" BorderBrush="{StaticResource MenuColor}" Background="White"
                                        BorderThickness="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Focusable="True">
                        <Canvas x:Name="canvasInterpol" Background="Transparent" >

                            <StackPanel x:Name="stackPanelInterpol" Canvas.Top="0" Canvas.Left="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0" Focusable="True">
                                <Viewport3D x:Name="viewport3DInterpol"  
                                        VerticalAlignment="Stretch" 
                                        Height="{Binding ActualHeight, ElementName=border3DInterpol}"
                                        Width="{Binding ActualWidth, ElementName=border3DInterpol}"                                       
                                        ClipToBounds="False"
                                        Margin="0"
                                        IsHitTestVisible ="False"
                                        >



                                    <Viewport3D.RenderTransform>
                                        <ScaleTransform ScaleX="1.0" ScaleY="1.0"/>
                                    </Viewport3D.RenderTransform>

                                    <Viewport3D.Camera>
                                        <PerspectiveCamera x:Name="cameraInterp" Position="0, 0, 6" LookDirection="0,0, -1"  UpDirection="0,1,0" FieldOfView="50" />
                                    </Viewport3D.Camera>


                                    <ModelVisual3D>
                                        <ModelVisual3D.Content>
                                            <DirectionalLight Color="#bfbfbf" Direction="0.5,-0.5,-0.5" />
                                        </ModelVisual3D.Content>
                                    </ModelVisual3D>
                                    <ModelVisual3D>
                                        <ModelVisual3D.Content>
                                            <DirectionalLight Color="#bfbfbf" Direction="-0.5,-0.5,-0.5" />
                                        </ModelVisual3D.Content>
                                    </ModelVisual3D>

                                    <ModelVisual3D>
                                        <ModelVisual3D.Content>
                                            <AmbientLight Color="#0d0d0d" />
                                        </ModelVisual3D.Content>
                                    </ModelVisual3D>

                                    <ModelVisual3D x:Name="modelVisual3DInterpol">
                                        <ModelVisual3D.Content>
                                            <GeometryModel3D x:Name="GeometryModelInterpol">
                                                <GeometryModel3D.Geometry>
                                                    <MeshGeometry3D x:Name="theGeometryInterpol"
                                   TriangleIndices="0,1,2 3,4,5 "
                                   Normals="0,0,1 0,0,1 0,0,1 0,0,1 0,0,1 0,0,1"
                                   TextureCoordinates="0,0 1,0 1,1 1,1 0,1 0,0"
                                   Positions="-0.25,-0.25,-1 0.25,-0.25,-1 0.25,0.25,-1 0.25,0.25,-1 -0.25,0.25,-1 -0.25,-0.25,-1" />
                                                </GeometryModel3D.Geometry>

                                                <GeometryModel3D.Material>
                                                    <MaterialGroup>
                                                        <DiffuseMaterial x:Name="theMaterialInterpol">
                                                            <DiffuseMaterial.Brush>
                                                                <!--<SolidColorBrush Color="#FFD6C79F" />-->
                                                                <SolidColorBrush Color="#ffe0bd" />
                                                            </DiffuseMaterial.Brush>
                                                        </DiffuseMaterial>
                                                    </MaterialGroup>
                                                </GeometryModel3D.Material>

                                                <GeometryModel3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="axisAngleInterpol" Axis="0,0,0" Angle="0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </GeometryModel3D.Transform>
                                            </GeometryModel3D>
                                        </ModelVisual3D.Content>
                                    </ModelVisual3D>
                                </Viewport3D>
                            </StackPanel>
                        </Canvas>
                    </Border>





                    <Border Grid.Column="2" CornerRadius="30,0,0,0" Margin="20,0,0,0" DockPanel.Dock="Left" Background="{StaticResource MenuColor}" >
                        <Grid>
                            <Label x:Name="interpolationMethodLbl" Content="Interpolation" HorizontalAlignment="Left" Margin="10,10,0,0" FontSize="20" VerticalAlignment="Top"/>
                            <ComboBox x:Name="interpolationCmbBox" HorizontalAlignment="Left" Margin="20,52,-30,0" VerticalAlignment="Top" Width="220" Height="30"
                                      SelectedItem="{Binding SelectedInterpolation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      />

                            <Label x:Name="methodLbl" Content="Method" HorizontalAlignment="Left" Margin="20,99,0,0" FontSize="15" VerticalAlignment="Top"/>

                            <ComboBox x:Name="methodCmbBox"
                                      Margin="130,104,0,0"
                                      VerticalAlignment="Top"
                                      Height="25"
                                      SelectedItem="{Binding SelectedMethod,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="110"
                                      />


                            <Label x:Name="stepLbl" Content="Step" HorizontalAlignment="Left" Margin="20,139,0,0" FontSize="15" VerticalAlignment="Top"/>

                            <wpfTool:DoubleUpDown x:Name="doubleUpDown" Value="{Binding SelectedStep, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=R}" 
                                                    HorizontalAlignment="Left" 
                                                  Margin="130,144,0,0"
                                                  VerticalAlignment="Top" 
                                                  Width="110"
                                                  Height="25" 
                                                  Background="White" 
                                                  Increment="0.005" Maximum="0.5" Minimum="0.0001" ClipValueToMinMax="True"
                                                  />



                            <Button x:Name="buttonPreview" Style="{StaticResource FSButtonStyle}" Content="Preview" Width="110"  Margin="130,183,0,0" HorizontalAlignment="Left"
                                     Command="{Binding PreviewInterpolationCommand}" Height="30" VerticalAlignment="Top" IsTabStop="False" Focusable="False"  />

                            <Button x:Name="buttonInterpolate" Style="{StaticResource ButtonStyleGreen}" Content="Interpolate" Width="110"  Margin="130,218,0,0" HorizontalAlignment="Left"
                                     Command="{Binding InterpolateCommand}" Height="31" VerticalAlignment="Top" IsTabStop="False" Focusable="False"  />

                            <Label x:Name="existingInterpolationLbl" Content="Existing Interpolations" HorizontalAlignment="Left" Margin="10,271,0,0" FontSize="16" VerticalAlignment="Top"/>

                            <Button x:Name="buttonIndex" Style="{StaticResource ButtonStyleGreen}" Content="Calculate Index" Width="135"  Margin="20,0,0,20" HorizontalAlignment="Left"
                                     Command="{Binding IndexCommand}" IsTabStop="False" Focusable="False" Height="31" VerticalAlignment="Bottom"  />
                            <ComboBox x:Name="existingInterpolationCmbBox" HorizontalAlignment="Left" Margin="10,302,0,0" VerticalAlignment="Top" Width="230" Height="30"
                                SelectedItem="{Binding SelectedExistingInterpolation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      />




                        </Grid>
                    </Border>

                </Grid>
            </TabItem>
        </TabControl>


        <Button x:Name="playButton"  Grid.Row="1" Height="30" Width="30" 
                VerticalAlignment="Top"
                HorizontalAlignment="Left" 
                Margin="40,0,0,0" 
                Background="White" 
                BorderBrush="{StaticResource MenuColor}"
                BorderThickness="2"
                Command="{Binding PlayCommand}"
                IsTabStop="False" Focusable="False"
                >
            <StackPanel Orientation="Horizontal"  Height="auto" >
                <Polygon Points="0,0 18,11 0,22"  Fill="{StaticResource MenuColor}" />
            </StackPanel>

        </Button>

        <Button x:Name="pauseButton"  Grid.Row="1" Height="30" Width="30" 
                VerticalAlignment="Top" 
                HorizontalAlignment="Left"
                Margin="75,0,0,0" 
                Background="White" 
                 BorderBrush="{StaticResource MenuColor}"
                BorderThickness="2"
                Command="{Binding PauseCommand}"
                IsTabStop="False"
                Focusable="False">
            <StackPanel Orientation="Horizontal">
                <Rectangle 
                    Height="20"    
                    Width="8"
                    Fill="{StaticResource MenuColor}"/>
                <Rectangle 
                    Height="20"    
                    Width="8"
                    Fill="{StaticResource MenuColor}"
                    Margin="2,0,0,0"/>
            </StackPanel>
        </Button>




        <local:SliderFS x:Name="slider" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                        BorderBrush="{StaticResource MenuColor}" 
                        BorderThickness="2"
                        DataContext="{Binding }"
                        RecordExercises="{Binding Path=RecordExercises}"                      
                        MaxTime="{Binding Path=MaxTime}"
                        Margin="40,40,40,10" Height="auto" Width="auto" />

        <StackPanel Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Width="auto" Height="auto" Margin="115,0,0,0" Orientation="Horizontal" >
            <TextBox x:Name="ValueTxtBx" HorizontalAlignment="Left" Height="30"  BorderThickness="0"
                  VerticalAlignment="Top" Width="auto"
                 VerticalContentAlignment="Center"  IsReadOnly="True">
                <TextBox.Text>
                    <MultiBinding StringFormat="{}{0:00}:{1:00.00}">
                        <Binding ElementName="slider" Path="ValueSpan.Minutes" Mode="OneWay" />
                        <Binding ElementName="slider" Path="ValueSpan.TotalMilliseconds" Mode="OneWay" Converter="{StaticResource MathConverter}" ConverterParameter="(@VALUE/1000)%60"  />
                    </MultiBinding>
                </TextBox.Text>
            </TextBox>

            <TextBox Text="/" HorizontalAlignment="Left" Height="30"  Margin="0" BorderThickness="0" VerticalAlignment="Top" Width="auto" VerticalContentAlignment="Center"  IsReadOnly="True"/>

            <TextBox x:Name="maxValueTxtBx" HorizontalAlignment="Left" Height="30"  Margin="2,0,0,0" BorderThickness="0"
                  VerticalAlignment="Top" Width="auto" VerticalContentAlignment="Center"  IsReadOnly="True">
                <TextBox.Text>

                    <MultiBinding StringFormat="{}{0:00}:{1:00.00}">
                        <Binding Path="MaxTimeSpan.Minutes" Mode="OneWay" />
                        <Binding ElementName="slider" Path="MaxTime" Converter="{StaticResource MathConverter}" ConverterParameter="(@VALUE/1000)%60" />
                    </MultiBinding>
                </TextBox.Text>
            </TextBox>

            <TextBox x:Name="ExerciseTxtBx" HorizontalAlignment="Left" Height="30" Margin="100,0,0,0"
                 Text="{Binding ElementName=slider, Path=CurrentExercise.Name, Mode=OneWay}" VerticalAlignment="Top" Width="200"
                 BorderThickness="0" VerticalContentAlignment="Center"  IsReadOnly="True" FontWeight="Bold" />
        </StackPanel>

    </Grid>
</UserControl>
